/*
@styleguide

@title getColor (@function)

Function fetches the specified color from a 'set' of colors, defined on $colorMap.

- @param {String} `$colorName` - *The color to fetch.*
- @param {String} `$colorSet` - *The set/group of colors which contains `$colorName`.*
- @return {String}

### Usage
```
// Input
p {
    color: getColor( black );
}

// Output
p {
    color: #000;
}


// NOTE:
// Example above assumes that $colorMap includes the key 'black', set to a value of #000.
```
```
// Input
h1 {
    background-color: getColor( base, placeholder );
}

// Output
h1 {
    background-color: #FAFAFA;
}

// NOTE:
// Example above assumes that $colorMap includes the $colorSet 'placeholder',
// which in turn has a key called 'base' set to value of #FAFAFA.
```
*/
@function getColor( $colorName, $colorSet: base ) {
  @if global-variable-exists( colorMap ) == false {
    @error 'Whoops! Please ensure that the `$colorMap` variable exists.';
  }

  $colors: map-get( $colorMap, $colorSet );

  @if variable-exists( colors ) == false {
    @error 'Please ensure that the `#{$colorSet}` key exists on $colorMap, and is a list.';
  }

  @return map-get( $colors, $colorName );
}