// descendant($descendants)
//
// For each valid 'descendant keyword' received via the `$descendants` argument,
// mixin wraps the provided `@content` declarations in a new CSS rule.
// Note that the mixin validates each 'descendant keyword' against an internally defined whitelist.
//
// **Usage**
// ```
// // Input
// section {
//     @include descendant( first last ) {
//         color: blue;
//         margin-bottom: 30px;
//     }
// }
//
// // Output
// section > *:first-child,
// section > *:last-child, {
//     color: blue;
//     margin-bottom: 30px;
// }
// ```
//
// $descendants - Space delimited list of descendant keywords.
//
// Style guide: mixins.descendant
@mixin descendant( $descendants ) {
    $valid-descendants: first last;

    @each $descendant in $descendants {
        @if index( $valid-descendants, $descendant ) {
            & > *:#{$descendant}-child {
                @content;
            }
        }
    }
}
